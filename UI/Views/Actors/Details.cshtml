@model UI.Models.ActorVM

@{
    ViewData["Title"] = @Model.FullName;

    string Role = null;

    if (TempData.ContainsKey("StateData"))
    {
        Dictionary<string, string> stateData = (Dictionary<string, string>)TempData["StateData"];

        Role = stateData["_Role"];
    }

    TempData.Keep();
}

<h1>Details</h1>

<div>
    <h4>@Html.DisplayFor(model => model.FullName)</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FullName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FullName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Image)
        </dt>
        <dd class="col-sm-10">
            <img src="@Model.Image" alt="@Model.FullName picture"
                 class="img-responsive" style="max-height: 200px">
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Birthday)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Birthday)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Age)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Age)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Biography)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Biography)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Website)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Website)
        </dd>
    </dl>
</div>
<div>
    @if (Role == "1")
    {
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a><p> | </p>
    }
    <a asp-action="Index">Back to List</a>
</div>
